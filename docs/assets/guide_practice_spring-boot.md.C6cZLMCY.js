import{_ as t,c as o,o as e,ae as r}from"./chunks/framework.Dh1jimFm.js";const g=JSON.parse('{"title":"Spring Boot与Kotlin集成","description":"","frontmatter":{},"headers":[],"relativePath":"guide/practice/spring-boot.md","filePath":"guide/practice/spring-boot.md"}'),i={name:"guide/practice/spring-boot.md"};function n(l,a,p,s,d,h){return e(),o("div",null,a[0]||(a[0]=[r('<h1 id="spring-boot与kotlin集成" tabindex="-1">Spring Boot与Kotlin集成 <a class="header-anchor" href="#spring-boot与kotlin集成" aria-label="Permalink to &quot;Spring Boot与Kotlin集成&quot;">​</a></h1><p>本章将介绍如何在Spring Boot项目中使用Kotlin，包括项目配置、依赖管理、常用模式和最佳实践。</p><h2 id="基础配置" tabindex="-1">基础配置 <a class="header-anchor" href="#基础配置" aria-label="Permalink to &quot;基础配置&quot;">​</a></h2><p>在Spring Boot项目中集成Kotlin需要添加相关依赖和插件配置。</p><h2 id="数据类与实体映射" tabindex="-1">数据类与实体映射 <a class="header-anchor" href="#数据类与实体映射" aria-label="Permalink to &quot;数据类与实体映射&quot;">​</a></h2><p>Kotlin的数据类如何与JPA实体进行映射，以及需要注意的事项。</p><h2 id="spring框架扩展" tabindex="-1">Spring框架扩展 <a class="header-anchor" href="#spring框架扩展" aria-label="Permalink to &quot;Spring框架扩展&quot;">​</a></h2><p>Spring为Kotlin提供的特定扩展和功能，如Router DSL、Bean定义等。</p><h2 id="依赖注入优化" tabindex="-1">依赖注入优化 <a class="header-anchor" href="#依赖注入优化" aria-label="Permalink to &quot;依赖注入优化&quot;">​</a></h2><p>使用Kotlin的构造器注入和非空类型系统，优化Spring的依赖注入方式。</p><h2 id="测试支持" tabindex="-1">测试支持 <a class="header-anchor" href="#测试支持" aria-label="Permalink to &quot;测试支持&quot;">​</a></h2><p>如何使用Kotlin编写更简洁、可读性更高的Spring Boot测试代码。</p>',12)]))}const u=t(i,[["render",n]]);export{g as __pageData,u as default};
